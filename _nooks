#compdef nooks

# Function to load and complete tags from ~/.nooks file
_nooks_tags() {
    local -a tags
    # Read tags from ~/.nooks file, one per line
    tags=(${(f)"$(awk '{print $1}' ~/.nooks 2>/dev/null)"})
    # Present tags as completion options
    _describe 'tag' tags
}

# Main completion function for nooks
_nooks() {
    local context state state_descr line
    typeset -A opt_args

    # Define all possible options for nooks
    local -a nooks_options=(
        '(-s --save-mark)'{-s,--save-mark}'[Save current directory with NAME]'
        '(-a --all)'{-a,--all}'[Show all saved directories]'
        '(-h --help)'{-h,--help}'[Display help and exit]'
        '(-q --quiet)'{-q,--quiet}'[Quiet mode]'
        '(-v --version)'{-v,--version}'[Display version information]'
    )

    # Set up argument completion
    _arguments -C \
        $nooks_options[@] \
        '1: :->cmds' \
        '*:: :->args' && return 0

    # Handle different completion states
    case $state in
        cmds)
            # If no argument is given yet, complete with tags
            _nooks_tags
            ;;
        args)
            # If an argument is already given, check what it is
            case $line[1] in
                -s|--save-mark)
                    # For -s or --save-mark, prompt for a name
                    _message 'name for saved directory'
                    ;;
                *)
                    # For any other case, complete with tags
                    _nooks_tags
                    ;;
            esac
            ;;
    esac
}

# Execute the completion function
_nooks "$@"
